-- MySQL Script generated by MySQL Workbench
-- Mon Sep 30 23:05:00 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Biblioteca
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Biblioteca
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Biblioteca` DEFAULT CHARACTER SET utf8 ;
USE `Biblioteca` ;

-- -----------------------------------------------------
-- Table `Biblioteca`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`books` (
  `book_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `description` VARCHAR(100) NULL,
  `year` INT NULL,
  `language` VARCHAR(20) NULL,
  `publisher` VARCHAR(45) NULL,
  `location` VARCHAR(45) NULL,
  `edition` VARCHAR(45) NULL,
  `isbn` VARCHAR(40) NULL,
  `total_amount` INT NOT NULL,
  `enabled` TINYINT NULL,
  `entry_date` DATE NOT NULL,
  `units_available` INT NOT NULL,
  PRIMARY KEY (`book_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`categories` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `parent_category_id` INT NULL,
  `icon` VARCHAR(50) NULL,
  `enabled` TINYINT(1) NULL,
  PRIMARY KEY (`category_id`),
  INDEX `fk_Categorias_Categorias_idx` (`parent_category_id` ASC) VISIBLE,
  UNIQUE INDEX `Categoria_UNIQUE` (`name` ASC) VISIBLE,
  CONSTRAINT `fk_Categorias_Categorias`
    FOREIGN KEY (`parent_category_id`)
    REFERENCES `Biblioteca`.`categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`user_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`user_types` (
  `user_type_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`user_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(20) NOT NULL,
  `second_name` VARCHAR(20) NULL,
  `first_sur_name` VARCHAR(20) NOT NULL,
  `second_sur_name` VARCHAR(20) NULL,
  `account_number` INT NOT NULL,
  `phone_number` VARCHAR(8) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `creation_date` DATE NOT NULL,
  `user_type_id` INT NOT NULL,
  `enabled` TINYINT(1) NOT NULL,
  `reputation` INT NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_Usuarios_TipoUsuario1_idx` (`user_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_Usuarios_TipoUsuario1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `Biblioteca`.`user_types` (`user_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`reservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`reservations` (
  `reserve_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `created_at` DATE NOT NULL,
  `status` VARCHAR(15) NOT NULL,
  `book_id` INT NOT NULL,
  `checkout` DATE NULL,
  PRIMARY KEY (`reserve_id`),
  INDEX `fk_Reservas_Usuarios1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Reservas_Libros1_idx` (`book_id` ASC) VISIBLE,
  CONSTRAINT `fk_Reservas_Usuarios1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Biblioteca`.`users` (`account_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reservas_Libros1`
    FOREIGN KEY (`book_id`)
    REFERENCES `Biblioteca`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`loans`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`loans` (
  `loan_id` INT NOT NULL AUTO_INCREMENT,
  `expires_on` DATETIME NOT NULL,
  `initial_notes` VARCHAR(100) NULL,
  `state` VARCHAR(20) NOT NULL,
  `reception_date` DATE NULL,
  `final_notes` VARCHAR(100) NULL,
  `loan_admin_id` INT NOT NULL,
  `reception_admin_id` INT NOT NULL,
  `loan_user_id` INT NOT NULL,
  `loaned_at` DATETIME NULL,
  PRIMARY KEY (`loan_id`),
  INDEX `fk_HistorialPrestamos_Usuarios3_idx` (`loan_admin_id` ASC) VISIBLE,
  INDEX `fk_HistorialPrestamos_Usuarios1_idx` (`reception_admin_id` ASC) VISIBLE,
  INDEX `fk_HistorialPrestamos_Usuarios2_idx` (`loan_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_HistorialPrestamos_Usuarios3`
    FOREIGN KEY (`loan_admin_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HistorialPrestamos_Usuarios1`
    FOREIGN KEY (`reception_admin_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HistorialPrestamos_Usuarios2`
    FOREIGN KEY (`loan_user_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`payments` (
  `payment_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `amount` INT NOT NULL,
  `reason` VARCHAR(100) NOT NULL,
  `admin_id` INT NOT NULL,
  PRIMARY KEY (`payment_id`),
  INDEX `fk_HistorialCobros_Usuarios1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_HistorialCobros_Usuarios2_idx` (`admin_id` ASC) VISIBLE,
  CONSTRAINT `fk_HistorialCobros_Usuarios1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Biblioteca`.`users` (`account_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HistorialCobros_Usuarios2`
    FOREIGN KEY (`admin_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`authors` (
  `author_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(90) NOT NULL,
  `last_name` VARCHAR(90) NULL,
  PRIMARY KEY (`author_id`),
  UNIQUE INDEX `author_id_UNIQUE` (`author_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`authors_per_book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`authors_per_book` (
  `book_id` INT NOT NULL,
  `author_id` INT NOT NULL,
  PRIMARY KEY (`book_id`, `author_id`),
  INDEX `fk_Libros_has_Autores_Autores1_idx` (`author_id` ASC) VISIBLE,
  INDEX `fk_Libros_has_Autores_Libros1_idx` (`book_id` ASC) VISIBLE,
  CONSTRAINT `fk_Libros_has_Autores_Libros1`
    FOREIGN KEY (`book_id`)
    REFERENCES `Biblioteca`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Libros_has_Autores_Autores1`
    FOREIGN KEY (`author_id`)
    REFERENCES `Biblioteca`.`authors` (`author_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`categories_per_book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`categories_per_book` (
  `book_id` INT NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`book_id`, `category_id`),
  INDEX `fk_Libros_has_Categorias_Categorias1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_Libros_has_Categorias_Libros1_idx` (`book_id` ASC) VISIBLE,
  CONSTRAINT `fk_Libros_has_Categorias_Libros1`
    FOREIGN KEY (`book_id`)
    REFERENCES `Biblioteca`.`books` (`book_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Libros_has_Categorias_Categorias1`
    FOREIGN KEY (`category_id`)
    REFERENCES `Biblioteca`.`categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`parameters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`parameters` (
  `idLibraries` INT NOT NULL AUTO_INCREMENT,
  `major` VARCHAR(45) NOT NULL,
  `image` VARCHAR(45) NOT NULL,
  `loanLimitDays` SMALLINT(3) NOT NULL,
  `creationDate` TIMESTAMP NULL,
  PRIMARY KEY (`idLibraries`),
  UNIQUE INDEX `idLibraries_UNIQUE` (`idLibraries` ASC) VISIBLE,
  UNIQUE INDEX `major_UNIQUE` (`major` ASC) VISIBLE,
  UNIQUE INDEX `image_UNIQUE` (`image` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`permissions` (
  `permission_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`permission_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`users_permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`users_permissions` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `permission_id`),
  INDEX `fk_users_has_permission_permission1_idx` (`permission_id` ASC) VISIBLE,
  INDEX `fk_users_has_permission_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_permission_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `Biblioteca`.`permissions` (`permission_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`actions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`actions` (
  `action_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`action_id`),
  UNIQUE INDEX `action_id_UNIQUE` (`action_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Biblioteca`.`actions_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Biblioteca`.`actions_history` (
  `actions_history_id` INT NOT NULL AUTO_INCREMENT,
  `dateTime` TIMESTAMP NULL,
  `admin_id` INT NOT NULL,
  `action_id` INT NOT NULL,
  PRIMARY KEY (`actions_history_id`),
  UNIQUE INDEX `actions_history_id_UNIQUE` (`actions_history_id` ASC) VISIBLE,
  INDEX `fk_actions_history_users1_idx` (`admin_id` ASC) VISIBLE,
  INDEX `fk_actions_history_actions1_idx` (`action_id` ASC) VISIBLE,
  CONSTRAINT `fk_actions_history_users1`
    FOREIGN KEY (`admin_id`)
    REFERENCES `Biblioteca`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actions_history_actions1`
    FOREIGN KEY (`action_id`)
    REFERENCES `Biblioteca`.`actions` (`action_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Biblioteca` ;

-- -----------------------------------------------------
-- procedure obtener_libros_por_categoria
-- -----------------------------------------------------

DELIMITER $$
USE `Biblioteca`$$
CREATE PROCEDURE `obtener_libros_por_categoria` (IN id_categoria int)
BEGIN
	SELECT books.book_id, books.title,books.isbn,authors.first_name FROM books 
    INNER JOIN categories_per_book ON categories_per_book.book_id  =  books.book_id 
    INNER JOIN authors_per_book ON authors_per_book.book_id = books.book_id
    INNER JOIN authors ON authors.author_id = authors_per_book.idLibro
    WHERE categories_per_book.category_id = id_categoria ORDER BY books.title ;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
